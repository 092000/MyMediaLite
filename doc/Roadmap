TODO list
---------
Recommender functionality
 - add filtering mechanism (pre-filter, post-filter)
 - support for non-binary attributes
 - additional engines (?)
   - non-negative matrix factorization
   - matrix factorization with bias term
   - really simple matrix factorization (without sigmoid function)
   - adaptive kNN by Koren+Bell
   - MF with Euclidean Embeddings
   - scalable CF by Koren: http://research.yahoo.com/pub/2435
   - Maximum Margin Matrix Factorization http://www.ci.tuwien.ac.at/~alexis/immmf.pdf
   - Hashing for CF: http://jmlr.csail.mit.edu/proceedings/papers/v9/karatzoglou10a/karatzoglou10a.pdf
 - time-aware rating and item prediction
   - timeSVD++
 - new engine types: TagRecommender, ContextAwareRecommender
 - ranking ensembles
 - stacking ensembles
 - ensembles for new users/new items
 - add more content-based routines (using Lemur?)
 - evaluation measure: MAP
Data types
 - (*) re-implement rating data structure
 - data types: introduce more properties
 - data type: symmetric matrix
 - profile+optimize data types
Architecture
 - (*) add function that maps original entity IDs to internal ones
 - use input from STDIN as training data
 - (*) define an easy interface for data access
 - Makefile-based build system (find dependencies automagically?)
 - parameterize types: user and item IDs, prediction values (in C++ port)
 - nicer, more generic structure for kNN engines
   - non-weighted kNN
   - more correlation measures (Jaccard index)
 - generic optimization interface and algorithms (compare Mallet)
 - add a simple logging mechanism (interface with 4 delegates):
    - debug, info, warn; progress 
 - provide bindings to languages like Python, Ruby, Perl
 - Java port
 - multi-core support
 - GPU support
 - support for distributed computing
 - webservice interface
Misc
 - faster evaluation routines

