<Type Name="RatingData" FullName="MyMediaLite.data.RatingData">
  <TypeSignature Language="C#" Value="public class RatingData" />
  <AssemblyInfo>
    <AssemblyName>Algorithms</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>
            Data storage for rating data.
            The rating events are accessible in user-wise, item-wise and unsorted triple-wise order.
            In order to save memory, the object initially stores only the unsorted ratings.
            If at some point user or item-wise access is needed, the underlying data structures
            are transparently created on-the-fly.
            </remarks>
    <author>Steffen Rendle, Zeno Gantner, University of Hildesheim</author>
    <author>Steffen Rendle, Zeno Gantner, University of Hildesheim</author>
    <author>Steffen Rendle, Zeno Gantner, University of Hildesheim</author>
    <author>Steffen Rendle, Zeno Gantner, University of Hildesheim</author>
    <author>Steffen Rendle, Zeno Gantner, University of Hildesheim</author>
    <author>Steffen Rendle, Zeno Gantner, University of Hildesheim</author>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RatingData ();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public void AddItem (int item_id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item_id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item_id">
            the item ID
            </param>
        <summary>
            Add an item - reserve resources for a new item
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRating">
      <MemberSignature Language="C#" Value="public void AddRating (MyMediaLite.data.RatingEvent rating);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rating" Type="MyMediaLite.data.RatingEvent" />
      </Parameters>
      <Docs>
        <param name="rating">
            the rating event
            </param>
        <summary>
            Add a rating event to the collection
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUser">
      <MemberSignature Language="C#" Value="public void AddUser (int user_id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user_id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="user_id">
            the user ID
            </param>
        <summary>
            Add a user - reserve resources for a new user
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public MyMediaLite.data.Ratings All { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MyMediaLite.data.Ratings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            All ratings
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public double Average { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The average rating value in the collection
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ByItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;MyMediaLite.data.Ratings&gt; ByItem { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;MyMediaLite.data.Ratings&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ratings by item
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ByUser">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;MyMediaLite.data.Ratings&gt; ByUser { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;MyMediaLite.data.Ratings&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ratings by user
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeRating">
      <MemberSignature Language="C#" Value="public void ChangeRating (MyMediaLite.data.RatingEvent rating, double new_rating);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rating" Type="MyMediaLite.data.RatingEvent" />
        <Parameter Name="new_rating" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rating">
            the rating event
            </param>
        <param name="new_rating">
            the new rating value
            </param>
        <summary>
            Change a rating value in the collection
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The number of ratings in the collection</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindRating">
      <MemberSignature Language="C#" Value="public MyMediaLite.data.RatingEvent FindRating (int user_id, int item_id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MyMediaLite.data.RatingEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user_id" Type="System.Int32" />
        <Parameter Name="item_id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="user_id">
            the numerical ID of the user
            </param>
        <param name="item_id">
            the numerical ID of the user
            </param>
        <summary>
            Find the rating value for a given user and item
            </summary>
        <returns>
            the rating event corresponding to the given user and item
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns an enumerator for use in foreach loops
            </summary>
        <returns>
            A <see cref="T:System.Collections.IEnumerator" /> containing the elements of this.All
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxItemID">
      <MemberSignature Language="C#" Value="public int MaxItemID { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The maximum item ID in the ratings
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxUserID">
      <MemberSignature Language="C#" Value="public int MaxUserID { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The maximum user ID in the ratings
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public void RemoveItem (int item_id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item_id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item_id">
            the numerical ID of the item
            </param>
        <summary>
            Remove an item and all its ratings from the collection
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRating">
      <MemberSignature Language="C#" Value="public void RemoveRating (MyMediaLite.data.RatingEvent rating);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rating" Type="MyMediaLite.data.RatingEvent" />
      </Parameters>
      <Docs>
        <param name="rating" />
        <summary>
            Remove a rating from the collection
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveUser">
      <MemberSignature Language="C#" Value="public void RemoveUser (int user_id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user_id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="user_id">
            the numerical ID of the user
            </param>
        <summary>
            Remove a user and all their ratings from the collection
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
