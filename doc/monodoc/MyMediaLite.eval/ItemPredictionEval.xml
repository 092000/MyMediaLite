<Type Name="ItemPredictionEval" FullName="MyMediaLite.eval.ItemPredictionEval">
  <TypeSignature Language="C#" Value="public static class ItemPredictionEval" />
  <AssemblyInfo>
    <AssemblyName>Algorithms</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Evaluation class</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AUC">
      <MemberSignature Language="C#" Value="public static double AUC (int[] ranked_items, System.Collections.Generic.ICollection&lt;int&gt; correct_items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ranked_items" Type="System.Int32[]" />
        <Parameter Name="correct_items" Type="System.Collections.Generic.ICollection&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="ranked_items">a list of ranked item IDs, the highest-ranking item first</param>
        <param name="correct_items">a collection of positive/correct item IDs</param>
        <summary>
            Compute the area under the ROC curve (AUC) of a list of ranked items.
            </summary>
        <returns>the AUC for the given data</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AUC">
      <MemberSignature Language="C#" Value="public static double AUC (int[] ranked_items, System.Collections.Generic.ICollection&lt;int&gt; correct_items, System.Collections.Generic.ICollection&lt;int&gt; ignore_items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ranked_items" Type="System.Int32[]" />
        <Parameter Name="correct_items" Type="System.Collections.Generic.ICollection&lt;System.Int32&gt;" />
        <Parameter Name="ignore_items" Type="System.Collections.Generic.ICollection&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="ranked_items">a list of ranked item IDs, the highest-ranking item first</param>
        <param name="correct_items">a collection of positive/correct item IDs</param>
        <param name="ignore_items">a collection of item IDs which should be ignored for the evaluation</param>
        <summary>
            Compute the area under the ROC curve (AUC) of a list of ranked items.
            </summary>
        <returns>the AUC for the given data</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateItemRecommender">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;string,double&gt; EvaluateItemRecommender (MyMediaLite.item_recommender.ItemRecommender engine, MyMediaLite.data_type.SparseBooleanMatrix test, MyMediaLite.data_type.SparseBooleanMatrix train, System.Collections.Generic.ICollection&lt;int&gt; relevant_items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="engine" Type="MyMediaLite.item_recommender.ItemRecommender" />
        <Parameter Name="test" Type="MyMediaLite.data_type.SparseBooleanMatrix" />
        <Parameter Name="train" Type="MyMediaLite.data_type.SparseBooleanMatrix" />
        <Parameter Name="relevant_items" Type="System.Collections.Generic.ICollection&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="engine">Item recommender engine</param>
        <param name="test">test cases</param>
        <param name="train">training data</param>
        <param name="relevant_items">a collection of integers with all relevant items</param>
        <summary>
            Evaluation for rankings of item recommenders. Computes the AUC and precision at different levels.
            User-item combinations that appear in both sets are ignored for the test set, and thus in the evaluation.
            Literature:
            C. Manning, P. Raghavan, H. Sch√ºtze
            Introduction to Information Retrieval,
            Cambridge University Press, 2008
            </summary>
        <returns>a dictionary containing the evaluation results</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemPredictionMeasures">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.ICollection&lt;string&gt; ItemPredictionMeasures { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            the evaluation measures for item prediction offered by the class
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MAP">
      <MemberSignature Language="C#" Value="public static double MAP (int[] ranked_items, System.Collections.Generic.ICollection&lt;int&gt; correct_items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ranked_items" Type="System.Int32[]" />
        <Parameter Name="correct_items" Type="System.Collections.Generic.ICollection&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="ranked_items">a list of ranked item IDs, the highest-ranking item first</param>
        <param name="correct_items">a collection of positive/correct item IDs</param>
        <summary>
            Compute the mean average precision (MAP) of a list of ranked items.
            </summary>
        <returns>the MAP for the given data</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MAP">
      <MemberSignature Language="C#" Value="public static double MAP (int[] ranked_items, System.Collections.Generic.ICollection&lt;int&gt; correct_items, System.Collections.Generic.ICollection&lt;int&gt; ignore_items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ranked_items" Type="System.Int32[]" />
        <Parameter Name="correct_items" Type="System.Collections.Generic.ICollection&lt;System.Int32&gt;" />
        <Parameter Name="ignore_items" Type="System.Collections.Generic.ICollection&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="ranked_items">a list of ranked item IDs, the highest-ranking item first</param>
        <param name="correct_items">a collection of positive/correct item IDs</param>
        <param name="ignore_items">a collection of item IDs which should be ignored for the evaluation</param>
        <summary>
            Compute the mean average precision (MAP) of a list of ranked items.
            </summary>
        <returns>the MAP for the given data</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NDCG">
      <MemberSignature Language="C#" Value="public static double NDCG (int[] ranked_items, System.Collections.Generic.ICollection&lt;int&gt; correct_items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ranked_items" Type="System.Int32[]" />
        <Parameter Name="correct_items" Type="System.Collections.Generic.ICollection&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="ranked_items">a list of ranked item IDs, the highest-ranking item first</param>
        <param name="correct_items">a collection of positive/correct item IDs</param>
        <summary>
            Compute the normalized discounted cumulative gain (NDCG) of a list of ranked items.
            </summary>
        <returns>the NDCG for the given data</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NDCG">
      <MemberSignature Language="C#" Value="public static double NDCG (int[] ranked_items, System.Collections.Generic.ICollection&lt;int&gt; correct_items, System.Collections.Generic.ICollection&lt;int&gt; ignore_items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ranked_items" Type="System.Int32[]" />
        <Parameter Name="correct_items" Type="System.Collections.Generic.ICollection&lt;System.Int32&gt;" />
        <Parameter Name="ignore_items" Type="System.Collections.Generic.ICollection&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="ranked_items">a list of ranked item IDs, the highest-ranking item first</param>
        <param name="correct_items">a collection of positive/correct item IDs</param>
        <param name="ignore_items">a collection of item IDs which should be ignored for the evaluation</param>
        <summary>
            Compute the normalized discounted cumulative gain (NDCG) of a list of ranked items.
            </summary>
        <returns>the NDCG for the given data</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecisionAt">
      <MemberSignature Language="C#" Value="public static double PrecisionAt (int[] ranked_items, System.Collections.Generic.ICollection&lt;int&gt; correct_items, int n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ranked_items" Type="System.Int32[]" />
        <Parameter Name="correct_items" Type="System.Collections.Generic.ICollection&lt;System.Int32&gt;" />
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ranked_items">a list of ranked item IDs, the highest-ranking item first</param>
        <param name="correct_items">a collection of positive/correct item IDs</param>
        <param name="n">the cutoff position in the list</param>
        <summary>
            Compute the precision@N of a list of ranked items.
            </summary>
        <returns>the precision@N for the given data</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecisionAt">
      <MemberSignature Language="C#" Value="public static double PrecisionAt (int[] ranked_items, System.Collections.Generic.ICollection&lt;int&gt; correct_items, System.Collections.Generic.ICollection&lt;int&gt; ignore_items, int n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ranked_items" Type="System.Int32[]" />
        <Parameter Name="correct_items" Type="System.Collections.Generic.ICollection&lt;System.Int32&gt;" />
        <Parameter Name="ignore_items" Type="System.Collections.Generic.ICollection&lt;System.Int32&gt;" />
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ranked_items">a list of ranked item IDs, the highest-ranking item first</param>
        <param name="correct_items">a collection of positive/correct item IDs</param>
        <param name="ignore_items">a collection of item IDs which should be ignored for the evaluation</param>
        <param name="n">the cutoff position in the list</param>
        <summary>
            Compute the precision@N of a list of ranked items.
            </summary>
        <returns>the precision@N for the given data</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
